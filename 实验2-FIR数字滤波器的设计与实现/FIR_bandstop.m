%%  DSP实验课-FIR滤波器设计
% 优点：
% 具有精确的线性相位
% 始终稳定
% 缺点
% 相同性能的条件下，所需阶数更多
% 延迟更大
clear all; clc;
%%  滤波器参数计算
Fs = 8000;%采样频率
F = [ 0 1400 1700 1900 2200 4000];%模拟截止频率[0 0.3 0.4 0.5 0.6 1];
f = 2*F/Fs;%数字截止频率[0 0.3 0.4 0.5 0.6 1]
m =[1 1 0 0 1 1];% 幅度
%%  帕克斯・麦克莱伦最佳FIR滤波器设计
% 利用迭代的方式最小化滤波器在通带和阻带的最大误差
b = firpm(54,[0 0.3 0.4 0.5 0.6 1],[1 1 0 0 1 1]);
% n 生成n+1阶 滤波器的阶数 过滤谐波的次数
% f向量 将归一化频率分成若干个区间 
% 向量中的元素数总是2的倍数，频率必须按递增顺序排列。
% a向量 对应f向量该点处的幅度从而确定传递函数b
freqz(b,1)
%%  频率取样法
% 从频域出发，在频域直接设计，把给定的理想频率响应加以等间隔抽样
% 并以此作为实际FIR滤波器的频率响应。
b2 = fir2(54,[0 0.35 0.35 0.55 0.55 1],[1 1 0 0 1 1]);
% n fir2 始终使用偶数阶。如果此时指定奇数值 n，则 fir2 将 n 增加 1
% 奇数的对称FIR滤波器在奈奎斯特频率上的增益必须为零。
% f向量 将归一化频率分成若干个区间 
% 重复的频率点是允许的，并被视为频率响应中的阶跃。
% a向量 对应f向量该点处的幅度从而确定传递函数b
freqz(b2,1)
%% 窗函数法
% 需将理想滤波器的无限长单位脉冲响应 hd[k]分别从左右进行截断
% 将其右移从而获得因果的 FIR 滤波器
b1 = fir1(58,[0.35 0.55],'stop');
% n 阶数 同fir2
% Wn向量 截止频率 6dB 
% 'stop' 带阻
freqz(b1,1)
%%  filterDesigner等纹波设计
B = [ 0.003952581435,-0.003520142054,  0.01581524685,-0.009266956709, -0.02244789712,...
-0.006289998069,  0.01176602952, 0.004024920985,-0.009350067005,-0.004449931905,...
-0.001719955122,-0.009442018345, 0.005766041111,  0.03053378873,-0.0001824836654,...
-0.05626341328, -0.02187927067,  0.07471738011,  0.05694083497, -0.07703644037,...
-0.09664916247,  0.05810647085,   0.1278928071, -0.02167075872,   0.8601905704,...
-0.02167075872,   0.1278928071,  0.05810647085, -0.09664916247, -0.07703644037,...
 0.05694083497,  0.07471738011, -0.02187927067, -0.05626341328,-0.0001824836654,...
 0.03053378873, 0.005766041111,-0.009442018345,-0.001719955122,-0.004449931905,...
-0.009350067005, 0.004024920985,  0.01176602952,-0.006289998069, -0.02244789712,...
-0.009266956709,  0.01581524685,-0.003520142054, 0.003952581435];

freqz(B,1)
%% 生成输入信号
n=0:1:1000;
x1=sin(2*pi*800*n/Fs);
x2=sin(2*pi*1800*n/Fs);
x3=sin(2*pi*3300*n/Fs);
x=(x1+x2+x3)/3;

X=fft(x);
subplot(2,1,1);
plot(n,x);
subplot(2,1,2);
plot(n*8,abs(X));
%%
y=filter(B,1,x);
%%  输入输出信号波形及频谱展示

X=fft(x);
Y=fft(y);
subplot(2,2,1);
plot(n,x);
title('Original Signal');
subplot(2,2,3);
plot(n*8,abs(X));
subplot(2,2,2);
plot(n,y);
title('Bandstop Filtered Signal')
subplot(2,2,4);
plot(n*8,abs(Y));

%% dB幅频特性对比
X=fft(x);
Y=fft(y);
subplot(2,2,1);
plot(n,x);
title('Original Signal');
subplot(2,2,3);
plot(n*8,20*log10(abs(X)));
subplot(2,2,2);
plot(n,y);
title('Bandstop Filtered Signal')
subplot(2,2,4);
plot(n*8,20*log10(abs(Y)));
